apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-dev   # name of deployment
  labels:
    pod: mongo-express  # key:value to reference for Service file.
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: mongo-express  # should match Deployment metadata.labels.
  template:
    metadata:
      labels:
        pod: mongo-express  # should match Deployment metadata.labels.
    spec:
      containers:
      - resources:
          requests:
            cpu: "50m"
            memory: "256Mi"
          limits:
            cpu: "2000m"
            memory: "4096Mi"
        name: mongo-express  # docker container name.
        image: mongo-express@sha256:d5cee110909938c99cf8800b9379494c190d8fecaec70a4ce3886facdee6ef8e # docker image to pull
        imagePullPolicy: IfNotPresent  # pull local first.
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-root-username
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD 
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-root-password
        - name: ME_CONFIG_MONGODB_SERVER  # points to address/ internal service = mongo-svc
          valueFrom:
            configMapKeyRef:
              name: mongo-configmap
              key: database_url
        ports:
        - name: mongo-port  # name of port 
          containerPort: 8081  # port pod is listening on.
        # - name: discovery-port
        #   containerPort: 50000
    #   volumeMounts:
    #     - name: mongo-vol
    #       mountPath: /var/mongo_vol
    # volumes:
    #   - name: mongo-vol
    #     emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-svc  # name of service. kubectl get service jenkins
  namespace: default
spec:
  # type: LoadBalancer  #(ClusterIp (default), NodePort, LoadBalancer)
  selector:  # Route service traffic to pods/deployment with label key:values matching this selector. 
    pod: mongo-express
  ports:
    - protocol: TCP
      port: 8081  # port to open on node for incoming request
      targetPort: 8081  # port to pod is listening on.
      # nodePort:  30000 # (30000-32767) Expose the node port to the outside world.  nodePort is a static IP on the node.
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress  # name of ingress. will overwrite other ingress files if name same.
  annotations:
      ingressClassName: nginx  # nginx needs to have class enabled.
spec:
  rules:
  - http: # tells nginx that incoming request get forwarded to internal service
      paths: # points to everything after the url: smithauto.us/(all this)
      - path: /mongo
        pathType: Prefix
        backend: # targets the Service file 'ports:' section
          service:
            name: mongo-express-svc  #should be the same as Service.metadata.name
            port:
              number: 8081 # same as Service.spec.ports.port