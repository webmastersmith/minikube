# apiVersion: v1
# kind: Namespace
# metadata:
#   name: jenkins  # create namespace app.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-dev   # name of deployment
  # namespace: jenkins
  labels:
    pod: jenkins  # key:value to reference for Service file.
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: jenkins  # should match Deployment.metadata.labels.
  template:
    metadata:
      labels:
        pod: jenkins  # should match Deployment.metadata.labels.
    spec:
      containers:
      - resources:
          requests:
            cpu: "50m"
            memory: "256Mi"
          limits:
            cpu: "2000m"
            memory: "4096Mi"
        name: jenkins  # docker container name.
        image: jenkins/jenkins@sha256:3badce57e54de38564b17ff6cc9f99d5d015ab3d1dbdf5ce005f8cd256dd15d5
        imagePullPolicy: IfNotPresent  # pull local first.
        ports:
        - name: jenkins-port  # name of port 
          containerPort: 8080  # port pod is listening on.
    #   volumeMounts:
    #     - name: mongo-vol
    #       mountPath: /var/mongo_vol
    # volumes:
    #   - name: mongo-vol
    #     emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc  # name of Service. kubectl get service jenkins
  # namespace: jenkins
spec:
  type: LoadBalancer  #(ClusterIp (default), NodePort, LoadBalancer)
  selector:  # Route service traffic to pods/deployment with label key:values matching this selector. 
    pod: jenkins
  ports:
  - name: jenkins
    protocol: TCP
    port: 8080  # port to open on node for incoming request
    targetPort: 8080  # port to pod is listening on.
    nodePort:  30000 # (30000-32767) Expose the node port to the outside world.  nodePort is a static IP on the node.